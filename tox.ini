[tox]
env_list =
    check-{style,build}
    test{,-devdeps}{,-pyargs,-cov}-xdist
    test-numpy{120,121,122}-xdist
    build-{docs,dist}
    withromancal

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}

[testenv]
description =
    run tests
    rad: with latest commit of `rad`
    oldestdeps: with the oldest supported version of key dependencies
    warnings: treating warnings as errors
    cov: with coverage
    xdist: using parallel processing
pass_env =
    CRDS_*
    HOME
    CI
    TOXENV
    CODECOV_*
extras =
    test
deps =
    xdist: pytest-xdist
    cov: pytest-cov
    oldestdeps: minimum_dependencies
    rad: rad @ git+https://github.com/spacetelescope/rad.git@main#egg=rad
commands_pre =
    oldestdeps: minimum_dependencies roman_datamodels --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    devdeps: pip install -r requirements-dev.txt -U --upgrade-strategy eager
    pip freeze
commands =
    pytest \
    warnings: -W error \
    xdist: -n auto \
    cov: --cov=roman_datamodels --cov=tests --cov-config pyproject.toml --cov-report term-missing --cov-report xml \
    {posargs}

[testenv:build-docs]
basepython= python3.8
extras= docs
commands=
    sphinx-build -W docs build/docs

[testenv:build-dist]
description = build wheel and sdist
skip_install = true
deps =
    build
commands =
    python -m build .

[testenv:withromancal]
allowlist_externals =
    git
    bash
deps =
    pytest-cov
commands_pre =
    bash -c "pip freeze -q | grep 'roman_datamodels @' > {env_tmp_dir}/requirements.txt"
    pip install git+https://github.com/spacetelescope/romancal.git
    pip install -r {env_tmp_dir}/requirements.txt
    pip freeze
commands =
    pytest tests/test_open.py::test_open_asn \
    --cov=tests --cov-config pyproject.toml --cov-report term-missing --cov-report xml \
    {posargs}
